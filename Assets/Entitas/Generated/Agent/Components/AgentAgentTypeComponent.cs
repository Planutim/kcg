//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class AgentEntity {

    public Agent.TypeComponent agentType { get { return (Agent.TypeComponent)GetComponent(AgentComponentsLookup.AgentType); } }
    public bool hasAgentType { get { return HasComponent(AgentComponentsLookup.AgentType); } }

    public void AddAgentType(Agent.AgentType newType) {
        var index = AgentComponentsLookup.AgentType;
        var component = (Agent.TypeComponent)CreateComponent(index, typeof(Agent.TypeComponent));
        component.Type = newType;
        AddComponent(index, component);
    }

    public void ReplaceAgentType(Agent.AgentType newType) {
        var index = AgentComponentsLookup.AgentType;
        var component = (Agent.TypeComponent)CreateComponent(index, typeof(Agent.TypeComponent));
        component.Type = newType;
        ReplaceComponent(index, component);
    }

    public void RemoveAgentType() {
        RemoveComponent(AgentComponentsLookup.AgentType);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class AgentMatcher {

    static Entitas.IMatcher<AgentEntity> _matcherAgentType;

    public static Entitas.IMatcher<AgentEntity> AgentType {
        get {
            if (_matcherAgentType == null) {
                var matcher = (Entitas.Matcher<AgentEntity>)Entitas.Matcher<AgentEntity>.AllOf(AgentComponentsLookup.AgentType);
                matcher.componentNames = AgentComponentsLookup.componentNames;
                _matcherAgentType = matcher;
            }

            return _matcherAgentType;
        }
    }
}
