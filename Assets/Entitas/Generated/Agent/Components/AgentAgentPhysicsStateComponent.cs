//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class AgentEntity {

    public Agent.PhysicsStateComponent agentPhysicsState { get { return (Agent.PhysicsStateComponent)GetComponent(AgentComponentsLookup.AgentPhysicsState); } }
    public bool hasAgentPhysicsState { get { return HasComponent(AgentComponentsLookup.AgentPhysicsState); } }

    public void AddAgentPhysicsState(KMath.Vec2f newPosition, KMath.Vec2f newPreviousPosition, float newSpeed, KMath.Vec2f newVelocity, KMath.Vec2f newAcceleration, int newDirection, Enums.AgentMovementState newMovementState, bool newAffectedByGravity, bool newInvulnerable, bool newOnGrounded, bool newDroping, bool newWantToDrop, int newJumpCounter, float newDashCooldown, float newSlashCooldown, float newFireGunCooldown) {
        var index = AgentComponentsLookup.AgentPhysicsState;
        var component = (Agent.PhysicsStateComponent)CreateComponent(index, typeof(Agent.PhysicsStateComponent));
        component.Position = newPosition;
        component.PreviousPosition = newPreviousPosition;
        component.Speed = newSpeed;
        component.Velocity = newVelocity;
        component.Acceleration = newAcceleration;
        component.Direction = newDirection;
        component.MovementState = newMovementState;
        component.AffectedByGravity = newAffectedByGravity;
        component.Invulnerable = newInvulnerable;
        component.OnGrounded = newOnGrounded;
        component.Droping = newDroping;
        component.WantToDrop = newWantToDrop;
        component.JumpCounter = newJumpCounter;
        component.DashCooldown = newDashCooldown;
        component.SlashCooldown = newSlashCooldown;
        component.FireGunCooldown = newFireGunCooldown;
        AddComponent(index, component);
    }

    public void ReplaceAgentPhysicsState(KMath.Vec2f newPosition, KMath.Vec2f newPreviousPosition, float newSpeed, KMath.Vec2f newVelocity, KMath.Vec2f newAcceleration, int newDirection, Enums.AgentMovementState newMovementState, bool newAffectedByGravity, bool newInvulnerable, bool newOnGrounded, bool newDroping, bool newWantToDrop, int newJumpCounter, float newDashCooldown, float newSlashCooldown, float newFireGunCooldown) {
        var index = AgentComponentsLookup.AgentPhysicsState;
        var component = (Agent.PhysicsStateComponent)CreateComponent(index, typeof(Agent.PhysicsStateComponent));
        component.Position = newPosition;
        component.PreviousPosition = newPreviousPosition;
        component.Speed = newSpeed;
        component.Velocity = newVelocity;
        component.Acceleration = newAcceleration;
        component.Direction = newDirection;
        component.MovementState = newMovementState;
        component.AffectedByGravity = newAffectedByGravity;
        component.Invulnerable = newInvulnerable;
        component.OnGrounded = newOnGrounded;
        component.Droping = newDroping;
        component.WantToDrop = newWantToDrop;
        component.JumpCounter = newJumpCounter;
        component.DashCooldown = newDashCooldown;
        component.SlashCooldown = newSlashCooldown;
        component.FireGunCooldown = newFireGunCooldown;
        ReplaceComponent(index, component);
    }

    public void RemoveAgentPhysicsState() {
        RemoveComponent(AgentComponentsLookup.AgentPhysicsState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class AgentMatcher {

    static Entitas.IMatcher<AgentEntity> _matcherAgentPhysicsState;

    public static Entitas.IMatcher<AgentEntity> AgentPhysicsState {
        get {
            if (_matcherAgentPhysicsState == null) {
                var matcher = (Entitas.Matcher<AgentEntity>)Entitas.Matcher<AgentEntity>.AllOf(AgentComponentsLookup.AgentPhysicsState);
                matcher.componentNames = AgentComponentsLookup.componentNames;
                _matcherAgentPhysicsState = matcher;
            }

            return _matcherAgentPhysicsState;
        }
    }
}
