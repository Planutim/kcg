//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class UIElementEntity {

    public KGUI.Elements.TypeComponent kGUIElementsType { get { return (KGUI.Elements.TypeComponent)GetComponent(UIElementComponentsLookup.KGUIElementsType); } }
    public bool hasKGUIElementsType { get { return HasComponent(UIElementComponentsLookup.KGUIElementsType); } }

    public void AddKGUIElementsType(Enums.ElementType newElementType) {
        var index = UIElementComponentsLookup.KGUIElementsType;
        var component = (KGUI.Elements.TypeComponent)CreateComponent(index, typeof(KGUI.Elements.TypeComponent));
        component.elementType = newElementType;
        AddComponent(index, component);
    }

    public void ReplaceKGUIElementsType(Enums.ElementType newElementType) {
        var index = UIElementComponentsLookup.KGUIElementsType;
        var component = (KGUI.Elements.TypeComponent)CreateComponent(index, typeof(KGUI.Elements.TypeComponent));
        component.elementType = newElementType;
        ReplaceComponent(index, component);
    }

    public void RemoveKGUIElementsType() {
        RemoveComponent(UIElementComponentsLookup.KGUIElementsType);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class UIElementMatcher {

    static Entitas.IMatcher<UIElementEntity> _matcherKGUIElementsType;

    public static Entitas.IMatcher<UIElementEntity> KGUIElementsType {
        get {
            if (_matcherKGUIElementsType == null) {
                var matcher = (Entitas.Matcher<UIElementEntity>)Entitas.Matcher<UIElementEntity>.AllOf(UIElementComponentsLookup.KGUIElementsType);
                matcher.componentNames = UIElementComponentsLookup.componentNames;
                _matcherKGUIElementsType = matcher;
            }

            return _matcherKGUIElementsType;
        }
    }
}
