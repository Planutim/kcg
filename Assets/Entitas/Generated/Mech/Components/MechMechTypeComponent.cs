//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MechEntity {

    public Mech.TypeComponent mechType { get { return (Mech.TypeComponent)GetComponent(MechComponentsLookup.MechType); } }
    public bool hasMechType { get { return HasComponent(MechComponentsLookup.MechType); } }

    public void AddMechType(Mech.MechType newMechType) {
        var index = MechComponentsLookup.MechType;
        var component = (Mech.TypeComponent)CreateComponent(index, typeof(Mech.TypeComponent));
        component.mechType = newMechType;
        AddComponent(index, component);
    }

    public void ReplaceMechType(Mech.MechType newMechType) {
        var index = MechComponentsLookup.MechType;
        var component = (Mech.TypeComponent)CreateComponent(index, typeof(Mech.TypeComponent));
        component.mechType = newMechType;
        ReplaceComponent(index, component);
    }

    public void RemoveMechType() {
        RemoveComponent(MechComponentsLookup.MechType);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MechMatcher {

    static Entitas.IMatcher<MechEntity> _matcherMechType;

    public static Entitas.IMatcher<MechEntity> MechType {
        get {
            if (_matcherMechType == null) {
                var matcher = (Entitas.Matcher<MechEntity>)Entitas.Matcher<MechEntity>.AllOf(MechComponentsLookup.MechType);
                matcher.componentNames = MechComponentsLookup.componentNames;
                _matcherMechType = matcher;
            }

            return _matcherMechType;
        }
    }
}
