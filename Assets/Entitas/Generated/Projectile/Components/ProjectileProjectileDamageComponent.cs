//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ProjectileEntity {

    public Projectile.DamageComponent projectileDamage { get { return (Projectile.DamageComponent)GetComponent(ProjectileComponentsLookup.ProjectileDamage); } }
    public bool hasProjectileDamage { get { return HasComponent(ProjectileComponentsLookup.ProjectileDamage); } }

    public void AddProjectileDamage(int newDamage) {
        var index = ProjectileComponentsLookup.ProjectileDamage;
        var component = (Projectile.DamageComponent)CreateComponent(index, typeof(Projectile.DamageComponent));
        component.Damage = newDamage;
        AddComponent(index, component);
    }

    public void ReplaceProjectileDamage(int newDamage) {
        var index = ProjectileComponentsLookup.ProjectileDamage;
        var component = (Projectile.DamageComponent)CreateComponent(index, typeof(Projectile.DamageComponent));
        component.Damage = newDamage;
        ReplaceComponent(index, component);
    }

    public void RemoveProjectileDamage() {
        RemoveComponent(ProjectileComponentsLookup.ProjectileDamage);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ProjectileMatcher {

    static Entitas.IMatcher<ProjectileEntity> _matcherProjectileDamage;

    public static Entitas.IMatcher<ProjectileEntity> ProjectileDamage {
        get {
            if (_matcherProjectileDamage == null) {
                var matcher = (Entitas.Matcher<ProjectileEntity>)Entitas.Matcher<ProjectileEntity>.AllOf(ProjectileComponentsLookup.ProjectileDamage);
                matcher.componentNames = ProjectileComponentsLookup.componentNames;
                _matcherProjectileDamage = matcher;
            }

            return _matcherProjectileDamage;
        }
    }
}
