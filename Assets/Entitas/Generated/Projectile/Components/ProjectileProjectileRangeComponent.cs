//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ProjectileEntity {

    public Projectile.RangeComponent projectileRange { get { return (Projectile.RangeComponent)GetComponent(ProjectileComponentsLookup.ProjectileRange); } }
    public bool hasProjectileRange { get { return HasComponent(ProjectileComponentsLookup.ProjectileRange); } }

    public void AddProjectileRange(float newRange) {
        var index = ProjectileComponentsLookup.ProjectileRange;
        var component = (Projectile.RangeComponent)CreateComponent(index, typeof(Projectile.RangeComponent));
        component.Range = newRange;
        AddComponent(index, component);
    }

    public void ReplaceProjectileRange(float newRange) {
        var index = ProjectileComponentsLookup.ProjectileRange;
        var component = (Projectile.RangeComponent)CreateComponent(index, typeof(Projectile.RangeComponent));
        component.Range = newRange;
        ReplaceComponent(index, component);
    }

    public void RemoveProjectileRange() {
        RemoveComponent(ProjectileComponentsLookup.ProjectileRange);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ProjectileMatcher {

    static Entitas.IMatcher<ProjectileEntity> _matcherProjectileRange;

    public static Entitas.IMatcher<ProjectileEntity> ProjectileRange {
        get {
            if (_matcherProjectileRange == null) {
                var matcher = (Entitas.Matcher<ProjectileEntity>)Entitas.Matcher<ProjectileEntity>.AllOf(ProjectileComponentsLookup.ProjectileRange);
                matcher.componentNames = ProjectileComponentsLookup.componentNames;
                _matcherProjectileRange = matcher;
            }

            return _matcherProjectileRange;
        }
    }
}
