//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Inventory.InventoryIDComponent inventoryID { get { return (Inventory.InventoryIDComponent)GetComponent(GameComponentsLookup.InventoryID); } }
    public bool hasInventoryID { get { return HasComponent(GameComponentsLookup.InventoryID); } }

    public void AddInventoryID(int newInventoryID) {
        var index = GameComponentsLookup.InventoryID;
        var component = (Inventory.InventoryIDComponent)CreateComponent(index, typeof(Inventory.InventoryIDComponent));
        component.InventoryID = newInventoryID;
        AddComponent(index, component);
    }

    public void ReplaceInventoryID(int newInventoryID) {
        var index = GameComponentsLookup.InventoryID;
        var component = (Inventory.InventoryIDComponent)CreateComponent(index, typeof(Inventory.InventoryIDComponent));
        component.InventoryID = newInventoryID;
        ReplaceComponent(index, component);
    }

    public void RemoveInventoryID() {
        RemoveComponent(GameComponentsLookup.InventoryID);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInventoryID;

    public static Entitas.IMatcher<GameEntity> InventoryID {
        get {
            if (_matcherInventoryID == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.InventoryID);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInventoryID = matcher;
            }

            return _matcherInventoryID;
        }
    }
}
