//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Projectile.IDComponent projectileID { get { return (Projectile.IDComponent)GetComponent(GameComponentsLookup.ProjectileID); } }
    public bool hasProjectileID { get { return HasComponent(GameComponentsLookup.ProjectileID); } }

    public void AddProjectileID(int newID) {
        var index = GameComponentsLookup.ProjectileID;
        var component = (Projectile.IDComponent)CreateComponent(index, typeof(Projectile.IDComponent));
        component.ID = newID;
        AddComponent(index, component);
    }

    public void ReplaceProjectileID(int newID) {
        var index = GameComponentsLookup.ProjectileID;
        var component = (Projectile.IDComponent)CreateComponent(index, typeof(Projectile.IDComponent));
        component.ID = newID;
        ReplaceComponent(index, component);
    }

    public void RemoveProjectileID() {
        RemoveComponent(GameComponentsLookup.ProjectileID);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherProjectileID;

    public static Entitas.IMatcher<GameEntity> ProjectileID {
        get {
            if (_matcherProjectileID == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ProjectileID);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherProjectileID = matcher;
            }

            return _matcherProjectileID;
        }
    }
}
