//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Animation.StateComponent animationState { get { return (Animation.StateComponent)GetComponent(GameComponentsLookup.AnimationState); } }
    public bool hasAnimationState { get { return HasComponent(GameComponentsLookup.AnimationState); } }

    public void AddAnimationState(float newAnimationSpeed, Animation.Animation newState) {
        var index = GameComponentsLookup.AnimationState;
        var component = (Animation.StateComponent)CreateComponent(index, typeof(Animation.StateComponent));
        component.AnimationSpeed = newAnimationSpeed;
        component.State = newState;
        AddComponent(index, component);
    }

    public void ReplaceAnimationState(float newAnimationSpeed, Animation.Animation newState) {
        var index = GameComponentsLookup.AnimationState;
        var component = (Animation.StateComponent)CreateComponent(index, typeof(Animation.StateComponent));
        component.AnimationSpeed = newAnimationSpeed;
        component.State = newState;
        ReplaceComponent(index, component);
    }

    public void RemoveAnimationState() {
        RemoveComponent(GameComponentsLookup.AnimationState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnimationState;

    public static Entitas.IMatcher<GameEntity> AnimationState {
        get {
            if (_matcherAnimationState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnimationState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnimationState = matcher;
            }

            return _matcherAnimationState;
        }
    }
}
