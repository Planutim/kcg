//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Item.Attributes.Component itemAttributes { get { return (Item.Attributes.Component)GetComponent(GameComponentsLookup.ItemAttributes); } }
    public bool hasItemAttributes { get { return HasComponent(GameComponentsLookup.ItemAttributes); } }

    public void AddItemAttributes(Enums.ItemType newItemType, string newLabel) {
        var index = GameComponentsLookup.ItemAttributes;
        var component = (Item.Attributes.Component)CreateComponent(index, typeof(Item.Attributes.Component));
        component.ItemType = newItemType;
        component.Label = newLabel;
        AddComponent(index, component);
    }

    public void ReplaceItemAttributes(Enums.ItemType newItemType, string newLabel) {
        var index = GameComponentsLookup.ItemAttributes;
        var component = (Item.Attributes.Component)CreateComponent(index, typeof(Item.Attributes.Component));
        component.ItemType = newItemType;
        component.Label = newLabel;
        ReplaceComponent(index, component);
    }

    public void RemoveItemAttributes() {
        RemoveComponent(GameComponentsLookup.ItemAttributes);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherItemAttributes;

    public static Entitas.IMatcher<GameEntity> ItemAttributes {
        get {
            if (_matcherItemAttributes == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ItemAttributes);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherItemAttributes = matcher;
            }

            return _matcherItemAttributes;
        }
    }
}
