//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Item.Attribute.StackableComponent itemAttributeStackable { get { return (Item.Attribute.StackableComponent)GetComponent(GameComponentsLookup.ItemAttributeStackable); } }
    public bool hasItemAttributeStackable { get { return HasComponent(GameComponentsLookup.ItemAttributeStackable); } }

    public void AddItemAttributeStackable(int newMaxStackSize) {
        var index = GameComponentsLookup.ItemAttributeStackable;
        var component = (Item.Attribute.StackableComponent)CreateComponent(index, typeof(Item.Attribute.StackableComponent));
        component.MaxStackSize = newMaxStackSize;
        AddComponent(index, component);
    }

    public void ReplaceItemAttributeStackable(int newMaxStackSize) {
        var index = GameComponentsLookup.ItemAttributeStackable;
        var component = (Item.Attribute.StackableComponent)CreateComponent(index, typeof(Item.Attribute.StackableComponent));
        component.MaxStackSize = newMaxStackSize;
        ReplaceComponent(index, component);
    }

    public void RemoveItemAttributeStackable() {
        RemoveComponent(GameComponentsLookup.ItemAttributeStackable);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherItemAttributeStackable;

    public static Entitas.IMatcher<GameEntity> ItemAttributeStackable {
        get {
            if (_matcherItemAttributeStackable == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ItemAttributeStackable);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherItemAttributeStackable = matcher;
            }

            return _matcherItemAttributeStackable;
        }
    }
}
