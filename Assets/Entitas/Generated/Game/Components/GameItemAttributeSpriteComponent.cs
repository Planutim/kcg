//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Item.Attribute.SpriteComponent itemAttributeSprite { get { return (Item.Attribute.SpriteComponent)GetComponent(GameComponentsLookup.ItemAttributeSprite); } }
    public bool hasItemAttributeSprite { get { return HasComponent(GameComponentsLookup.ItemAttributeSprite); } }

    public void AddItemAttributeSprite(int newID) {
        var index = GameComponentsLookup.ItemAttributeSprite;
        var component = (Item.Attribute.SpriteComponent)CreateComponent(index, typeof(Item.Attribute.SpriteComponent));
        component.ID = newID;
        AddComponent(index, component);
    }

    public void ReplaceItemAttributeSprite(int newID) {
        var index = GameComponentsLookup.ItemAttributeSprite;
        var component = (Item.Attribute.SpriteComponent)CreateComponent(index, typeof(Item.Attribute.SpriteComponent));
        component.ID = newID;
        ReplaceComponent(index, component);
    }

    public void RemoveItemAttributeSprite() {
        RemoveComponent(GameComponentsLookup.ItemAttributeSprite);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherItemAttributeSprite;

    public static Entitas.IMatcher<GameEntity> ItemAttributeSprite {
        get {
            if (_matcherItemAttributeSprite == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ItemAttributeSprite);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherItemAttributeSprite = matcher;
            }

            return _matcherItemAttributeSprite;
        }
    }
}
