//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Item.UseComponent itemUse { get { return (Item.UseComponent)GetComponent(GameComponentsLookup.ItemUse); } }
    public bool hasItemUse { get { return HasComponent(GameComponentsLookup.ItemUse); } }

    public void AddItemUse(int newActionID) {
        var index = GameComponentsLookup.ItemUse;
        var component = (Item.UseComponent)CreateComponent(index, typeof(Item.UseComponent));
        component.ActionID = newActionID;
        AddComponent(index, component);
    }

    public void ReplaceItemUse(int newActionID) {
        var index = GameComponentsLookup.ItemUse;
        var component = (Item.UseComponent)CreateComponent(index, typeof(Item.UseComponent));
        component.ActionID = newActionID;
        ReplaceComponent(index, component);
    }

    public void RemoveItemUse() {
        RemoveComponent(GameComponentsLookup.ItemUse);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherItemUse;

    public static Entitas.IMatcher<GameEntity> ItemUse {
        get {
            if (_matcherItemUse == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ItemUse);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherItemUse = matcher;
            }

            return _matcherItemUse;
        }
    }
}
