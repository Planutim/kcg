//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Action.Attribute.NameComponent actionAttributeName { get { return (Action.Attribute.NameComponent)GetComponent(GameComponentsLookup.ActionAttributeName); } }
    public bool hasActionAttributeName { get { return HasComponent(GameComponentsLookup.ActionAttributeName); } }

    public void AddActionAttributeName(string newTypeName) {
        var index = GameComponentsLookup.ActionAttributeName;
        var component = (Action.Attribute.NameComponent)CreateComponent(index, typeof(Action.Attribute.NameComponent));
        component.TypeName = newTypeName;
        AddComponent(index, component);
    }

    public void ReplaceActionAttributeName(string newTypeName) {
        var index = GameComponentsLookup.ActionAttributeName;
        var component = (Action.Attribute.NameComponent)CreateComponent(index, typeof(Action.Attribute.NameComponent));
        component.TypeName = newTypeName;
        ReplaceComponent(index, component);
    }

    public void RemoveActionAttributeName() {
        RemoveComponent(GameComponentsLookup.ActionAttributeName);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherActionAttributeName;

    public static Entitas.IMatcher<GameEntity> ActionAttributeName {
        get {
            if (_matcherActionAttributeName == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ActionAttributeName);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherActionAttributeName = matcher;
            }

            return _matcherActionAttributeName;
        }
    }
}
