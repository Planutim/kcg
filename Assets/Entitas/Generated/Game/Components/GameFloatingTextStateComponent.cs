//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public FloatingText.StateComponent floatingTextState { get { return (FloatingText.StateComponent)GetComponent(GameComponentsLookup.FloatingTextState); } }
    public bool hasFloatingTextState { get { return HasComponent(GameComponentsLookup.FloatingTextState); } }

    public void AddFloatingTextState(float newTimeToLive, string newText) {
        var index = GameComponentsLookup.FloatingTextState;
        var component = (FloatingText.StateComponent)CreateComponent(index, typeof(FloatingText.StateComponent));
        component.TimeToLive = newTimeToLive;
        component.Text = newText;
        AddComponent(index, component);
    }

    public void ReplaceFloatingTextState(float newTimeToLive, string newText) {
        var index = GameComponentsLookup.FloatingTextState;
        var component = (FloatingText.StateComponent)CreateComponent(index, typeof(FloatingText.StateComponent));
        component.TimeToLive = newTimeToLive;
        component.Text = newText;
        ReplaceComponent(index, component);
    }

    public void RemoveFloatingTextState() {
        RemoveComponent(GameComponentsLookup.FloatingTextState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherFloatingTextState;

    public static Entitas.IMatcher<GameEntity> FloatingTextState {
        get {
            if (_matcherFloatingTextState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.FloatingTextState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherFloatingTextState = matcher;
            }

            return _matcherFloatingTextState;
        }
    }
}
