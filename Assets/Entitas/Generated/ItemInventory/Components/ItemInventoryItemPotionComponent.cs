//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ItemInventoryEntity {

    public Item.PotionComponent itemPotion { get { return (Item.PotionComponent)GetComponent(ItemInventoryComponentsLookup.ItemPotion); } }
    public bool hasItemPotion { get { return HasComponent(ItemInventoryComponentsLookup.ItemPotion); } }

    public void AddItemPotion(Enums.PotionType newPotionType) {
        var index = ItemInventoryComponentsLookup.ItemPotion;
        var component = (Item.PotionComponent)CreateComponent(index, typeof(Item.PotionComponent));
        component.potionType = newPotionType;
        AddComponent(index, component);
    }

    public void ReplaceItemPotion(Enums.PotionType newPotionType) {
        var index = ItemInventoryComponentsLookup.ItemPotion;
        var component = (Item.PotionComponent)CreateComponent(index, typeof(Item.PotionComponent));
        component.potionType = newPotionType;
        ReplaceComponent(index, component);
    }

    public void RemoveItemPotion() {
        RemoveComponent(ItemInventoryComponentsLookup.ItemPotion);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ItemInventoryMatcher {

    static Entitas.IMatcher<ItemInventoryEntity> _matcherItemPotion;

    public static Entitas.IMatcher<ItemInventoryEntity> ItemPotion {
        get {
            if (_matcherItemPotion == null) {
                var matcher = (Entitas.Matcher<ItemInventoryEntity>)Entitas.Matcher<ItemInventoryEntity>.AllOf(ItemInventoryComponentsLookup.ItemPotion);
                matcher.componentNames = ItemInventoryComponentsLookup.componentNames;
                _matcherItemPotion = matcher;
            }

            return _matcherItemPotion;
        }
    }
}
