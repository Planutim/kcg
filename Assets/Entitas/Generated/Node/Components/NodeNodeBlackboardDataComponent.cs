//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class NodeEntity {

    public Node.BlackboardDataComponent nodeBlackboardData { get { return (Node.BlackboardDataComponent)GetComponent(NodeComponentsLookup.NodeBlackboardData); } }
    public bool hasNodeBlackboardData { get { return HasComponent(NodeComponentsLookup.NodeBlackboardData); } }

    public void AddNodeBlackboardData(int[] newEntriesIDs) {
        var index = NodeComponentsLookup.NodeBlackboardData;
        var component = (Node.BlackboardDataComponent)CreateComponent(index, typeof(Node.BlackboardDataComponent));
        component.entriesIDs = newEntriesIDs;
        AddComponent(index, component);
    }

    public void ReplaceNodeBlackboardData(int[] newEntriesIDs) {
        var index = NodeComponentsLookup.NodeBlackboardData;
        var component = (Node.BlackboardDataComponent)CreateComponent(index, typeof(Node.BlackboardDataComponent));
        component.entriesIDs = newEntriesIDs;
        ReplaceComponent(index, component);
    }

    public void RemoveNodeBlackboardData() {
        RemoveComponent(NodeComponentsLookup.NodeBlackboardData);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class NodeMatcher {

    static Entitas.IMatcher<NodeEntity> _matcherNodeBlackboardData;

    public static Entitas.IMatcher<NodeEntity> NodeBlackboardData {
        get {
            if (_matcherNodeBlackboardData == null) {
                var matcher = (Entitas.Matcher<NodeEntity>)Entitas.Matcher<NodeEntity>.AllOf(NodeComponentsLookup.NodeBlackboardData);
                matcher.componentNames = NodeComponentsLookup.componentNames;
                _matcherNodeBlackboardData = matcher;
            }

            return _matcherNodeBlackboardData;
        }
    }
}
