//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class NodeEntity {

    public Node.TimeComponent nodeTime { get { return (Node.TimeComponent)GetComponent(NodeComponentsLookup.NodeTime); } }
    public bool hasNodeTime { get { return HasComponent(NodeComponentsLookup.NodeTime); } }

    public void AddNodeTime(float newStartTime) {
        var index = NodeComponentsLookup.NodeTime;
        var component = (Node.TimeComponent)CreateComponent(index, typeof(Node.TimeComponent));
        component.StartTime = newStartTime;
        AddComponent(index, component);
    }

    public void ReplaceNodeTime(float newStartTime) {
        var index = NodeComponentsLookup.NodeTime;
        var component = (Node.TimeComponent)CreateComponent(index, typeof(Node.TimeComponent));
        component.StartTime = newStartTime;
        ReplaceComponent(index, component);
    }

    public void RemoveNodeTime() {
        RemoveComponent(NodeComponentsLookup.NodeTime);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class NodeMatcher {

    static Entitas.IMatcher<NodeEntity> _matcherNodeTime;

    public static Entitas.IMatcher<NodeEntity> NodeTime {
        get {
            if (_matcherNodeTime == null) {
                var matcher = (Entitas.Matcher<NodeEntity>)Entitas.Matcher<NodeEntity>.AllOf(NodeComponentsLookup.NodeTime);
                matcher.componentNames = NodeComponentsLookup.componentNames;
                _matcherNodeTime = matcher;
            }

            return _matcherNodeTime;
        }
    }
}
