//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class NodeEntity {

    public Node.OwnerComponent nodeOwner { get { return (Node.OwnerComponent)GetComponent(NodeComponentsLookup.NodeOwner); } }
    public bool hasNodeOwner { get { return HasComponent(NodeComponentsLookup.NodeOwner); } }

    public void AddNodeOwner(int newAgentID) {
        var index = NodeComponentsLookup.NodeOwner;
        var component = (Node.OwnerComponent)CreateComponent(index, typeof(Node.OwnerComponent));
        component.AgentID = newAgentID;
        AddComponent(index, component);
    }

    public void ReplaceNodeOwner(int newAgentID) {
        var index = NodeComponentsLookup.NodeOwner;
        var component = (Node.OwnerComponent)CreateComponent(index, typeof(Node.OwnerComponent));
        component.AgentID = newAgentID;
        ReplaceComponent(index, component);
    }

    public void RemoveNodeOwner() {
        RemoveComponent(NodeComponentsLookup.NodeOwner);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class NodeMatcher {

    static Entitas.IMatcher<NodeEntity> _matcherNodeOwner;

    public static Entitas.IMatcher<NodeEntity> NodeOwner {
        get {
            if (_matcherNodeOwner == null) {
                var matcher = (Entitas.Matcher<NodeEntity>)Entitas.Matcher<NodeEntity>.AllOf(NodeComponentsLookup.NodeOwner);
                matcher.componentNames = NodeComponentsLookup.componentNames;
                _matcherNodeOwner = matcher;
            }

            return _matcherNodeOwner;
        }
    }
}
