//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PodEntity {

    public Pod.PhysicsState2DComponent podPhysicsState2D { get { return (Pod.PhysicsState2DComponent)GetComponent(PodComponentsLookup.PodPhysicsState2D); } }
    public bool hasPodPhysicsState2D { get { return HasComponent(PodComponentsLookup.PodPhysicsState2D); } }

    public void AddPodPhysicsState2D(KMath.Vec2f newPosition, KMath.Vec2f newTempPosition, KMath.Vec2f newScale, KMath.Vec2f newTempScale, float newRotation, KMath.Vec2f newAngularVelocity, float newAngularMass, float newAngularAcceleration, float newCenterOfGravity, KMath.Vec2f newCenterOfRotation, bool newAffectedByGravity) {
        var index = PodComponentsLookup.PodPhysicsState2D;
        var component = (Pod.PhysicsState2DComponent)CreateComponent(index, typeof(Pod.PhysicsState2DComponent));
        component.Position = newPosition;
        component.TempPosition = newTempPosition;
        component.Scale = newScale;
        component.TempScale = newTempScale;
        component.Rotation = newRotation;
        component.angularVelocity = newAngularVelocity;
        component.angularMass = newAngularMass;
        component.angularAcceleration = newAngularAcceleration;
        component.centerOfGravity = newCenterOfGravity;
        component.centerOfRotation = newCenterOfRotation;
        component.AffectedByGravity = newAffectedByGravity;
        AddComponent(index, component);
    }

    public void ReplacePodPhysicsState2D(KMath.Vec2f newPosition, KMath.Vec2f newTempPosition, KMath.Vec2f newScale, KMath.Vec2f newTempScale, float newRotation, KMath.Vec2f newAngularVelocity, float newAngularMass, float newAngularAcceleration, float newCenterOfGravity, KMath.Vec2f newCenterOfRotation, bool newAffectedByGravity) {
        var index = PodComponentsLookup.PodPhysicsState2D;
        var component = (Pod.PhysicsState2DComponent)CreateComponent(index, typeof(Pod.PhysicsState2DComponent));
        component.Position = newPosition;
        component.TempPosition = newTempPosition;
        component.Scale = newScale;
        component.TempScale = newTempScale;
        component.Rotation = newRotation;
        component.angularVelocity = newAngularVelocity;
        component.angularMass = newAngularMass;
        component.angularAcceleration = newAngularAcceleration;
        component.centerOfGravity = newCenterOfGravity;
        component.centerOfRotation = newCenterOfRotation;
        component.AffectedByGravity = newAffectedByGravity;
        ReplaceComponent(index, component);
    }

    public void RemovePodPhysicsState2D() {
        RemoveComponent(PodComponentsLookup.PodPhysicsState2D);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class PodMatcher {

    static Entitas.IMatcher<PodEntity> _matcherPodPhysicsState2D;

    public static Entitas.IMatcher<PodEntity> PodPhysicsState2D {
        get {
            if (_matcherPodPhysicsState2D == null) {
                var matcher = (Entitas.Matcher<PodEntity>)Entitas.Matcher<PodEntity>.AllOf(PodComponentsLookup.PodPhysicsState2D);
                matcher.componentNames = PodComponentsLookup.componentNames;
                _matcherPodPhysicsState2D = matcher;
            }

            return _matcherPodPhysicsState2D;
        }
    }
}
