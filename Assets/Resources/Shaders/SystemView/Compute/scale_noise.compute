#pragma kernel scale_noise

  StructuredBuffer<float>       noise;
RWStructuredBuffer<float> outputnoise;
uint width;
uint height;
uint scale;

float smootherstep(float a, float b, float w) {
    return (b - a) * w * w * w * (w * (w * 6.0f - 15.0f) + 10.0f) + a;
}

[numthreads(8, 8, 1)]
void scale_noise(uint3 id : SV_DispatchThreadID) {
    uint  x0      = id.x   / scale;
    uint  y0      = id.y   / scale;

    uint  scaledw = width  / scale;
    uint  scaledh = height / scale;

    float dx      = (float)(id.x % scale) / scale;
    float dy      = (float)(id.y % scale) / scale;

    uint  x1      = x0 + 1;
    uint  y1      = y0 + 1;

    if(x1 > scaledw) x1 = 0;
    if(y1 > scaledh) y1 = 0;
    
    float a = smootherstep(smootherstep(noise[x0 + y0 * scaledw], noise[x1 + y0 * scaledw], dx),
                           smootherstep(noise[x0 + y1 * scaledw], noise[x1 + y1 * scaledw], dx),
                                                                                            dy) * 1.5f;

    // Blend onto underlying value
    outputnoise[id.x + id.y * width] = a + outputnoise[id.x + id.y * width] * (1.0f - a);
}
